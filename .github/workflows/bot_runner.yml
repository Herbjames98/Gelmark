# This workflow commits changes directly to the main branch without a pull request.

name: Lore Updater Bot

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  update-lore:
    runs-on: ubuntu-latest

    # NOTE: 'pull-requests: write' is no longer needed.
    # 'contents: write' is essential to allow the bot to push to the repository.
    permissions:
      contents: write

    steps:
      # Step 1: Download your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the correct Python version
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Step 3: Install the Python libraries your script needs
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai gitpython

      # Step 4: Run your Python script from inside the correct folder
      - name: Run Lore Update Pipeline
        working-directory: ./My gm
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: python update_lore_pipeline.py

      # Step 5: Commit and Push Changes Directly to Main Branch
      - name: Commit and Push Changes
        working-directory: ./My gm
        run: |
          # Configure git with the bot's identity
          git config --global user.name 'Lore Bot'
          git config --global user.email 'lore-bot@users.noreply.github.com'

          # Check if the python script made any file changes.
          # If no changes, exit gracefully.
          if git diff-index --quiet HEAD; then
            echo "No changes detected. Exiting."
            exit 0
          fi
          
          # If there are changes, add, commit, and push them directly to main.
          echo "Changes detected. Committing directly to main branch..."
          git add -A
          git commit -m "Automated Lore Update"
          git push origin main